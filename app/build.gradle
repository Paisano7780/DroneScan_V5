// app/build.gradle (en la carpeta app/)
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    namespace 'com.dronescan.msdksample' // Asegúrate de que este sea tu namespace
    compileSdkVersion 33 // Compatible con AGP 7.4.2
    buildToolsVersion "33.0.0" // Asegúrate de tener esta versión instalada en SDK Manager

    defaultConfig {
        applicationId "com.dronescan.msdksample" // Asegúrate de que este sea tu ID de aplicación
        minSdkVersion 24
        targetSdkVersion 33 // Compatible con AGP 7.4.2
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        compose true
        viewBinding true
        dataBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.1" // Compatible con Kotlin 1.8.10
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
            excludes += "META-INF/DEPENDENCIES"
            excludes += "META-INF/LICENSE"
            excludes += "META-INF/LICENSE.txt"
            excludes += "META-INF/NOTICE"
            excludes += "META-INF/NOTICE.txt"
            excludes += "META-INF/*.kotlin_module"
            pickFirsts += "META-INF/services/com.google.zxing.client.android.encode.EncodeWorker"
        }
        jniLibs {
            useLegacyPackaging = true
        }
    }

    sourceSets {
        main {
            java.srcDirs("src/main/java", "src/main/kotlin")
            res.srcDirs("src/main/res")
            assets.srcDirs("src/main/assets")
            jniLibs.srcDirs("src/main/jniLibs")
        }
    }

    lintOptions {
        disable "MultipleResolutions", "StringFormatMatches"
    }
}

dependencies {
    // Dependencias de AndroidX Core
    implementation "androidx.core:core-ktx:${rootProject.ext.androidxCoreKtx}"

    // Dependencias de AndroidX Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${rootProject.ext.androidxLifecycleRuntimeKtx}"

    // Dependencias de AndroidX Activity
    implementation "androidx.activity:activity-compose:${rootProject.ext.androidxActivityCompose}"

    // Jetpack Compose BOM
    implementation platform("androidx.compose:compose-bom:${rootProject.ext.androidxComposeBom}")

    // Jetpack Compose UI
    implementation "androidx.compose.ui:ui:${rootProject.ext.androidxUi}"
    implementation "androidx.compose.ui:ui-graphics:${rootProject.ext.androidxUiGraphics}"
    implementation "androidx.compose.ui:ui-tooling-preview:${rootProject.ext.androidxUiToolingPreview}"

    // Material Design 3 (Compose)
    implementation "androidx.compose.material3:material3:${rootProject.ext.androidxMaterial3}"

    // Dependencias para pruebas
    testImplementation "junit:junit:${rootProject.ext.junit}"
    androidTestImplementation "androidx.test.ext:junit:${rootProject.ext.androidxJunit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.androidxEspressoCore}"
    androidTestImplementation platform("androidx.compose:compose-bom:${rootProject.ext.androidxComposeBom}")
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:${rootProject.ext.androidxUiTestJunit4}"
    debugImplementation "androidx.compose.ui:ui-tooling:${rootProject.ext.androidxUiTooling}"
    debugImplementation "androidx.compose.ui:ui-test-manifest:${rootProject.ext.androidxUiTooling}"

    // Dependencias del DJI Mobile SDK (Versión 5.x)
    implementation "com.dji:dji-sdk-v5-aircraft:${rootProject.ext.dji_sdk_version}"
    compileOnly "com.dji:dji-sdk-v5-aircraft-provided:${rootProject.ext.dji_sdk_version}"
    implementation "com.dji:dji-sdk-v5-networkImp:${rootProject.ext.dji_sdk_version}"
    implementation "com.dji:dji-sdk-v5-common:${rootProject.ext.dji_sdk_version}"
    implementation "com.dji:dji-sdk-v5-component:${rootProject.ext.dji_sdk_version}"
    implementation "com.dji:dji-sdk-v5-keyvalue:${rootProject.ext.dji_sdk_version}"
    implementation "com.dji:dji-sdk-v5-manager:${rootProject.ext.dji_sdk_version}"
    implementation "com.dji:dji-sdk-v5-utils:${rootProject.ext.dji_sdk_version}"

    // CAMBIADO: El UX SDK ahora es una dependencia de librería pre-compilada
    implementation "com.dji:dji-uxsdk:${rootProject.ext.dji_sdk_version}"

    // Dependencias de ZXing para escaneo de códigos de barras/QR
    implementation "com.google.zxing:core:${rootProject.ext.zxingCore}"
    implementation "com.journeyapps:zxing-android-embedded:${rootProject.ext.zxingAndroidEmbeddedVersion}"
}
